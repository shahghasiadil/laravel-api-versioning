parameters:
	ignoreErrors:
		-
			message: '#^Parameter \#1 \$iterator of function iterator_to_array expects iterable, Illuminate\\Routing\\RouteCollectionInterface given\.$#'
			identifier: argument.type
			count: 1
			path: src/Console/Commands/ApiVersionHealthCommand.php

		-
			message: '#^Parameter \#1 \$iterator of function iterator_to_array expects iterable, Illuminate\\Routing\\RouteCollectionInterface given\.$#'
			identifier: argument.type
			count: 1
			path: src/Console/Commands/ApiVersionsCommand.php

		-
			message: '#^Cannot call method toArray\(\) on mixed\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Http/Resources/VersionedJsonResource.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Http\\Resources\\VersionedJsonResource\:\:callMethodIfExists\(\) should return array\<string, mixed\> but returns array\<mixed\>\.$#'
			identifier: return.type
			count: 2
			path: src/Http/Resources/VersionedJsonResource.php

		-
			message: '#^Parameter \#1 \$callback of function call_user_func expects callable\(\)\: mixed, array\{\$this\(ShahGhasiAdil\\LaravelApiVersioning\\Http\\Resources\\VersionedJsonResource\), string\} given\.$#'
			identifier: argument.type
			count: 1
			path: src/Http/Resources/VersionedJsonResource.php

		-
			message: '#^Cannot access offset ''version_inheritance'' on mixed\.$#'
			identifier: offsetAccess.nonOffsetAccessible
			count: 1
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Cannot access offset ''version_method_mapping'' on mixed\.$#'
			identifier: offsetAccess.nonOffsetAccessible
			count: 1
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Cannot access offset mixed on mixed\.$#'
			identifier: offsetAccess.nonOffsetAccessible
			count: 2
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Cannot access offset string on mixed\.$#'
			identifier: offsetAccess.nonOffsetAccessible
			count: 1
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Http\\Resources\\VersionedResourceCollection\:\:callMethodIfExists\(\) should return array\<string, mixed\> but returns array\<mixed\>\.$#'
			identifier: return.type
			count: 1
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Parameter \#1 \$callback of function call_user_func expects callable\(\)\: mixed, array\{\$this\(ShahGhasiAdil\\LaravelApiVersioning\\Http\\Resources\\VersionedResourceCollection\), string\} given\.$#'
			identifier: argument.type
			count: 1
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Parameter \#1 \$method of method ShahGhasiAdil\\LaravelApiVersioning\\Http\\Resources\\VersionedResourceCollection\:\:callMethodIfExists\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 2
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Parameter \#1 \$method of method ShahGhasiAdil\\LaravelApiVersioning\\Http\\Resources\\VersionedResourceCollection\:\:methodExists\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 2
			path: src/Http/Resources/VersionedResourceCollection.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Http\\Responses\\ProblemDetailsResponse\:\:__construct\(\) has parameter \$extensions with no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: src/Http/Responses/ProblemDetailsResponse.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Http\\Responses\\ProblemDetailsResponse\:\:unsupportedVersion\(\) has parameter \$endpointVersions with no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: src/Http/Responses/ProblemDetailsResponse.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Http\\Responses\\ProblemDetailsResponse\:\:unsupportedVersion\(\) has parameter \$supportedVersions with no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: src/Http/Responses/ProblemDetailsResponse.php

		-
			message: '#^Parameter \#3 \$callback of static method Illuminate\\Support\\Facades\\Cache\:\:remember\(\) expects Closure, callable\(\)\: mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Services/AttributeCacheService.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeVersionResolver\:\:createVersionInfo\(\) has parameter \$class with generic class ReflectionClass but does not specify its types\: T$#'
			identifier: missingType.generics
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeVersionResolver\:\:getAllVersionsForRoute\(\) should return array\<string\> but returns mixed\.$#'
			identifier: return.type
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeVersionResolver\:\:getDeprecationInfo\(\) has parameter \$reflection with generic class ReflectionClass but does not specify its types\: T$#'
			identifier: missingType.generics
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeVersionResolver\:\:getVersionsFromAttributes\(\) has parameter \$reflection with generic class ReflectionClass but does not specify its types\: T$#'
			identifier: missingType.generics
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeVersionResolver\:\:getVersionsFromAttributes\(\) should return array\<string\> but returns array\.$#'
			identifier: return.type
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeVersionResolver\:\:hasAttribute\(\) has parameter \$reflection with generic class ReflectionClass but does not specify its types\: T$#'
			identifier: missingType.generics
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeVersionResolver\:\:resolveVersionForRoute\(\) should return ShahGhasiAdil\\LaravelApiVersioning\\ValueObjects\\VersionInfo\|null but returns mixed\.$#'
			identifier: return.type
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Parameter \#1 \$controller of method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeCacheService\:\:generateRouteKey\(\) expects string, class\-string\|false given\.$#'
			identifier: argument.type
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Parameter \#1 \$controller of method ShahGhasiAdil\\LaravelApiVersioning\\Services\\AttributeCacheService\:\:generateRouteVersionsKey\(\) expects string, class\-string\|false given\.$#'
			identifier: argument.type
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Parameter \#1 \$object of function get_class expects object, mixed given\.$#'
			identifier: argument.type
			count: 2
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Parameter \#1 \$objectOrClass of class ReflectionClass constructor expects class\-string\<T of object\>\|T of object, mixed given\.$#'
			identifier: argument.type
			count: 2
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Parameter \#2 \.\.\.\$arrays of function array_merge expects array, mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Services/AttributeVersionResolver.php

		-
			message: '#^Match arm comparison between ''\='' and ''\='' is always true\.$#'
			identifier: match.alwaysTrue
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:getHighest\(\) has parameter \$versions with no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:getHighest\(\) should return string\|null but returns mixed\.$#'
			identifier: return.type
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:getLowest\(\) has parameter \$versions with no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:getLowest\(\) should return string\|null but returns mixed\.$#'
			identifier: return.type
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:sort\(\) has parameter \$versions with no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:sort\(\) should return array\<string\> but returns list\.$#'
			identifier: return.type
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Offset 0 on non\-empty\-list\<string\> on left side of \?\? always exists and is not nullable\.$#'
			identifier: nullCoalesce.offset
			count: 2
			path: src/Services/VersionComparator.php

		-
			message: '#^Only booleans are allowed in an if condition, int\|false given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Services/VersionComparator.php

		-
			message: '#^Parameter \#1 \$version1 of method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:compare\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 4
			path: src/Services/VersionComparator.php

		-
			message: '#^Parameter \#2 \$version2 of method ShahGhasiAdil\\LaravelApiVersioning\\Services\\VersionComparator\:\:compare\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 4
			path: src/Services/VersionComparator.php

		-
			message: '#^Call to function is_array\(\) with array\<string, mixed\> will always evaluate to true\.$#'
			identifier: function.alreadyNarrowedType
			count: 1
			path: src/Services/VersionConfigService.php

		-
			message: '#^Cannot cast mixed to string\.$#'
			identifier: cast.string
			count: 2
			path: src/Services/VersionManager.php
